name: Main CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:
    types: [opened, synchronize, reopened]

jobs:

  build:
    
    runs-on: ubuntu-latest
#    if: github.event_name == 'push'

    steps:
    - name: checkout code
      uses: actions/checkout@v2

    - name: Tests
      run: make test

    - name: Security Tests
      run: make security 

    - name: Archive security results
      uses: actions/upload-artifact@v2
      with:
        name: zap-report
        path: output/security-report.txt

    - name: Build the Go package
      run: make build

    - name: Run the Go package locally (detached)
      run: make run

#     This is only used to initially create the table - need a cleaner way to include this,
#     and have it do nothing if the table exists
    
#    - name: Create DynamboDB Table in AWS - To store metadata (one-time)
#      run: make create_table
#      env:
#        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#        AWS_DEFAULT_REGION: us-east-2

    - name: Create tags in DynamboDB Table in AWS - Metadata for this commit
      run: make create_tags
      env:
        PIPELINE_ID: ${GITHUB_RUN_ID}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: us-east-2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push image
      run: make push

  # security-scan:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: checkout code
  #     uses: actions/checkout@v2

  #   - name: security scans
  #           # make security should run all scans in parallel using a docker-compose file with 1 service per scan
  #     run: make security

  #     # This would be most flexible if done at the end of each security scan above as part of it's run (might be tricky to get github context)
  #     # Alternatively, archive a path that they ALL write to....
  #   - name: Archive security results
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: zap-report
  #       path: output/security-report.txt

  call-verify:
    uses: ./.github/workflows/verify.yml
    needs: [build]
    secrets: inherit
